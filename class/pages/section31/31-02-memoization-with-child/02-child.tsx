import { memo } from "react";

function MemoizationWithChildPage(): JSX.Element {
  console.log("자식이 렌덜이 됩니다.");

  // 원래 부모컴포넌트가 리렌더링이 되면 자식 컴포넌트가 리렌더리이 된다.
  // 그래서 그게 막아주는게 memo이다!!
  // 이렇게 컴포넌트 전체를 memo로 감싸주면 부모가 리렌더링 돼도 자식 컴포넌트 리렌더링을 막아줌
  // 근데 항상 리렌더링을 막아주는건 아니다!
  // 만약 부모에게서 props를 받고 있다면 그 변수를 사용하지 않아도
  // 리렌더링이 된다!!
  // 생각해보다
  // 처음부터 모든 컴포넌트에 메모를 붙이자 근데 이것을 남발한다면
  // 오히려 더 메모리를 낭비가 될수 있다!!
  // 그래서 필요할 때만 메모를 쓰자!!
  return (
    <>
      <div>===========================================================</div>

      <h1>저는 자식 컴포넌트 입니다!!!</h1>
      <div>===========================================================</div>
    </>
  );
}

export default memo(MemoizationWithChildPage);
